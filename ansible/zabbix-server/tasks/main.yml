- name: install packages
  sudo: yes
  yum:
    name: "{{ item.name }}"
    enablerepo: "{{ item.enablerepo }}"
    state: present
  with_items: zabbix_server_install_packages


##
# Setup the snmpd service 
##

# add your device snmp mib file here
- name: copy mibs over
  sudo: yes
  copy: src=resource/usr/share/snmp/mibs/{{ item }}.txt  dest=/usr/share/snmp/mibs/{{ item }}.txt owner=root group=root mode="u=rw,g=r,o=r"
  with_items:
      - CS-ROOT-MIB
      - HUAWEI-MIB
      - HUAWEI-ETHARP-MIB
      - HUAWEI-ENTITY-TRAP-MIB
      - HUAWEI-BASE-TRAP-MIB
      - JUNIPER-CFGMGMT-MIB
      - JUNIPER-COLLECTOR-MIB
      - JUNIPER-MIB
      - JUNIPER-SMI
      - IDRAC-MIB
  notify: restart snmpd

- name: start snmpd at boot
  action: service name=snmpd state=started enabled=yes

##
# Setup the snmptrapd service 
##

# use osd as trap info
- name: update the snmptrapd service file 
  sudo: yes
  copy: src=resource/usr/lib/systemd/system/snmptrapd.service dest=/usr/lib/systemd/system/snmptrapd.service owner=root group=root mode="u=rw,g=r,o=r"
  notify: reload systemd 

- name: update the snmptrapd conf 
  sudo: yes
  copy: src=resource/etc/snmp/snmptrap.conf dest=/etc/snmp/snmptrap.conf owner=root group=root mode="u=rw,g=r,o=r"
  notify: restart snmptrapd 

##
# Setup the snmptt service
##

#snmptt conf item:
snmp_conf_item:
  - snmptt.conf.ENTITY-MIB
  - snmptt.conf.ENTITY-MIB
  - snmptt.conf.HUAWEI-BASE-TRAP-MIB
  - snmptt.conf.HUAWEI-ENTITY-TRAP-MIB
  - snmptt.conf.HUAWEI-ETHARP-MIB
  - snmptt.conf.HUAWEI-MIB
  - snmptt.conf.IANA-ITU-ALARM-TC-MIB
  - snmptt.conf.ITU-ALARM-TC-MIB
  - snmptt.conf.JUNIPER-CFGMGMT-MIB
  - snmptt.conf.JUNIPER-COLLECTOR-MIB
  - snmptt.conf.JUNIPER-MIB
  - snmptt.conf.JUNIPER-SMI
  - snmptt.conf.P-BRIDGE-MIB


- name: copy snmptt conf over
  sudo: yes
  copy: src=resource/etc/snmp/{{ item }}  dest=/etc/snmp/{{ item }} owner=root group=root mode="u=rw,g=r,o=r"
  with_items: 
      - snmptt.conf.ENTITY-MIB
      - snmptt.conf.HUAWEI-BASE-TRAP-MIB
      - snmptt.conf.HUAWEI-ENTITY-TRAP-MIB
      - snmptt.conf.HUAWEI-ETHARP-MIB
      - snmptt.conf.HUAWEI-MIB
      - snmptt.conf.IANA-ITU-ALARM-TC-MIB
      - snmptt.conf.ITU-ALARM-TC-MIB
      - snmptt.conf.JUNIPER-CFGMGMT-MIB
      - snmptt.conf.JUNIPER-COLLECTOR-MIB
      - snmptt.conf.JUNIPER-MIB
      - snmptt.conf.JUNIPER-SMI
      - snmptt.conf.P-BRIDGE-MIB

- name: configure php conf
  sudo: yes
  copy: src=resource/etc/php.conf dest=/etc/php.conf ower=root group=root mode="u=rw,g=r,o=r"

- name: configure zabbix-server.conf
  sudo: yes
  template:
    dest: /etc/zabbix/zabbix_server.conf
    src: zabbix_server.conf.j2
    owner: root
    group: zabbix
    mode: 0640
  notify: restart zabbix-server

- name: ensure started zabbix-server
  sudo: yes
  service:
    name: zabbix-server
    state: started
    enabled: yes

- name: create zabbix database user
  mysql_user:
    login_host: "{{ zabbix_server_database_login_host }}"
    login_password: "{{ zabbix_server_database_login_password }}"
    login_port: "{{ zabbix_server_database_login_port }}"
    login_user: "{{ zabbix_server_database_login_user }}"
    host: "{{ zabbix_server_database_host }}"
    name: "{{ zabbix_server_DBUser }}"
    password: "{{ zabbix_server_DBPassword }}"
    priv: "{{ zabbix_server_DBName }}.*:ALL"
    state: present

- name: create zabbix database
  mysql_db:
    encoding: utf8
    login_host: "{{ zabbix_server_database_login_host }}"
    login_password: "{{ zabbix_server_database_login_password }}"
    login_port: "{{ zabbix_server_database_login_port }}"
    login_user: "{{ zabbix_server_database_login_user }}"
    name: "{{ zabbix_server_DBName }}"
    state: present

- name: check installed zabbix-server-mysql version
  shell: zabbix_server_mysql --version | awk '/Zabbix/{ sub(/v/, "", $3); print $3 }'
  register: installed_version

- name: table exists?
  command: >
    mysql --host={{ zabbix_server_DBHost }}
          --password={{ zabbix_server_DBPassword }}
          --port={{ zabbix_server_DBPort }}
          --user={{ zabbix_server_DBUser }}
          {{ zabbix_server_DBName }}
          --execute='SHOW TABLES'
  register: table_exists
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ zabbix_server_mysql_bindir }}"

- name: migration zabbix database
  mysql_db:
    login_host: "{{ zabbix_server_database_login_host }}"
    login_user: "{{ zabbix_server_database_login_user }}"
    login_password: "{{ zabbix_server_database_login_password }}"
    login_port: "{{ zabbix_server_database_login_port }}"
    name: "{{ zabbix_server_DBName }}"
    state: import
    target: "{{ item }}"
  with_items:
    - /usr/share/doc/zabbix-server-mysql-{{ installed_version.stdout }}/create/schema.sql
    - /usr/share/doc/zabbix-server-mysql-{{ installed_version.stdout }}/create/images.sql
    - /usr/share/doc/zabbix-server-mysql-{{ installed_version.stdout }}/create/data.sql
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ zabbix_server_mysql_bindir }}"
  when: table_exists.stdout.find('user_history') == -1
